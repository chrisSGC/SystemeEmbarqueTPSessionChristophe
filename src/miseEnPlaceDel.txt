#include <Anneau.h>
#include <iostream>     // IO functions
Anneau *anneauDel = NULL;

const char *byte_to_binary(int x) {
    static char b[9];
    b[0] = '\0';
    int z;
    for (z = 128; z > 0; z >>= 1){
        strcat(b, ((x & z) == z) ? "1" : "0");
        }
    return b;
}

//Affiche l'état d'un régistre
void displayRegister (int R1) {   
    char display[10];
    strcpy(display, byte_to_binary(R1));
    std::cout << display << "\n";
}


void setup() {
  anneauDel = new Anneau();
  anneauDel->Initialiser();

    Serial.begin(9600);
    delay(100);
  Serial.println("Registre lancement:");
  displayRegister(anneauDel->GetRegistre());
}

void loop() {
  anneauDel->ReinitialiserRegistre();
  Serial.println("Registre apres reset:");
  displayRegister(anneauDel->GetRegistre());
  anneauDel->EteindreDel();

  anneauDel->FaireTournerAnneau();
  anneauDel->EteindreDel();
  delay(1000);
  
  Serial.println("Registre 1er tour:");
  anneauDel->TraiterRegistre(0b11000000, 25, 25 ,0);
  displayRegister(anneauDel->GetRegistre());

  delay(1500);
  anneauDel->FaireTournerAnneau();
  anneauDel->EteindreDel();
  delay(1500);

  Serial.println("Registre second tour:");
  anneauDel->TraiterRegistre(0b00110000, 25, 25, 0);
  displayRegister(anneauDel->GetRegistre());

  delay(1500);
  anneauDel->FaireTournerAnneau();
  anneauDel->EteindreDel();
  delay(1500);

  Serial.println("Registre 3e tour:");
  anneauDel->TraiterRegistre(0b00001100, 25, 25, 0);
  displayRegister(anneauDel->GetRegistre());

  delay(1500);
  anneauDel->FaireTournerAnneau();
  anneauDel->EteindreDel();
  delay(1500);

  Serial.println("Registre dernier tour:");
  anneauDel->TraiterRegistre(0b00000011, 25, 25, 0);
  displayRegister(anneauDel->GetRegistre());
  delay(1500);

  anneauDel->EteindreDel();
  Serial.println("Registre final:");
  displayRegister(anneauDel->GetRegistre());


  anneauDel->ReinitialiserRegistre();
  anneauDel->TraiterRegistre(0b11111111, 25, 0, 0);
  Serial.println("Registre ECHEC:");
  displayRegister(anneauDel->GetRegistre());

  delay(1500);

  anneauDel->ReinitialiserRegistre();
  anneauDel->TraiterRegistre(0b11111111, 0, 25, 0);
  Serial.println("Registre VALIDATION:");
  displayRegister(anneauDel->GetRegistre());

  delay(1500);
  anneauDel->EteindreDel();
}
